### reusable workflow can't be called with a strategy matrix
### and so are not used as a workflow without a strategy matrix
### to feed in inputs parameters is useless in my case.

### Sonar cloud job the cache in $HOME/.sonar doesn't save sub-dirs
### so can't be cached.

name: ci-linux
on:
  push:
    paths-ignore:
      - '.gitignore'
      - '.gitattributes'
      - 'README.md'
      - 'LICENSE'

  #pull_request:
  #  branches: [ master ]

#permissions: read-all

jobs:
  build:
    name: Build Linux
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        triplet: [ x64-linux ]
        build_type: [ Debug, Release ]
    steps:
      - name: set-up environment variables
        run: |
          echo "ARCH=64" >> $GITHUB_ENV
          #echo "CMAKE_A=x64" >> $GITHUB_ENV
      - uses: actions/cache@v2
        id: dep-cache
        with:
            path: /usr/local/share/vcpkg/installed
            key: ${{ runner.os }}-${{ matrix.triplet }}-dep-cache-${{ hashFiles('**/*') }}
            restore-keys: ${{ runner.os }}-${{ matrix.triplet }}-dep-cache
      - name: vcpkg
        #if: steps.dep-cache.outputs.cache-hit != 'true'
        run: |
          vcpkg --triplet=${{ matrix.triplet }} install sdl2 sdl2[x11] sdl2-mixer spdlog gtest
      - uses: actions/checkout@v2
      - name: create build dir
        run: mkdir build
      - name: cmake generator
        run: |
          cmake -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
        working-directory: build
      - name: cmake build
        run: |
          cmake --build . --config=${{ matrix.build_type }}
        working-directory: build
      - name: CTest
        run: ctest --output-on-failure
        working-directory: build
      - name: cmake install
        run: sudo cmake --build . --target install --config ${{ matrix.build_type }}
        working-directory: build
      - name: cmake package
        run: sudo cmake --build . --target package --config ${{ matrix.build_type }}
        working-directory: build
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
            generate_release_notes: true
            prerelease: true
            files: "*.zip"
