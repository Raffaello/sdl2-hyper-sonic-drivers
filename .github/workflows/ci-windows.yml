name: ci-windows
on:
  push:
    paths-ignore:
      - 'doc/**'
      - '.gitignore'
      - '.gitattributes'
      - 'README.md'
      - 'wave_generators.r'

  #pull_request:
  #  branches: [ master ]

#permissions: read-all

jobs:
  build:
    name: Build Windows
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        triplet: [ x86-windows, x64-windows ]
        build_type: [ Debug, Release ]
    steps:
      - uses: actions/cache@v2
        id: dep-cache
        with:
            path: C:\vcpkg\installed
            key: ${{ runner.os }}-dep-cache-${{ hashFiles('**/*') }}
            restore-keys: ${{ runner.os }}-dep-cache-${{ matrix.triplet }}
      - name: set-up environment variables
        run: |
          if ( "${{ matrix.triplet }}".startsWith('x86')) {
            #echo "ARCH=32" >> $GITHUB_ENV
            echo "ARCH=32" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            echo "CMAKE_A=Win32" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            #echo "ARCH=64" >> $GITHUB_ENV
            echo "ARCH=64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            echo "CMAKE_A=x64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }
      - name: vcpkg
        #if: steps.dep-cache.outputs.cache-hit != 'true'
        run: |
          . "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars${{ env.ARCH }}.bat"
          vcpkg --triplet=${{ matrix.triplet }} install sdl2 sdl2-mixer spdlog gtest
      - uses: actions/checkout@v2
      - name: create build dir
        run: mkdir build
      - name: cmake generator
        run: |
          . "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars${{ env.ARCH }}.bat"
          cmake -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -A ${{ env.CMAKE_A }} -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
        working-directory: build
      - name: cmake build
        run: |
          . "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars${{ env.ARCH }}.bat"
          cmake --build . --config=${{ matrix.build_type }}
        working-directory: build
      - name: CTest
        run: ctest --output-on-failure
        working-directory: build
      - name: cmake install
        run: cmake --build . --target install
        working-directory: build
      - name: cmake pacakge
        run: cmake --build . --target package
        working-directory: build
